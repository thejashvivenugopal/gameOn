openapi: 3.1.0
info:
  title: Location Management API
  description: REST APIs for managing location data
  version: "1.0"
servers:
  - url: http://localhost:3002
    description: Local development environment

paths:
  /locations:
    get:
      operationId: getLocations
      summary: Retrieve all locations
      description: Fetch a list of all locations
      responses:
        200:
          description: List of locations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Location"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      operationId: createLocation
      summary: Create a new location
      description: Add a new location to the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
      responses:
        201:
          description: Location created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
        400:
          description: Bad request due to invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /locations/{id}:
    get:
      operationId: getLocationById
      summary: Retrieve a specific location by ID
      description: Fetch details of a location using its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Location retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
        404:
          description: Location not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      operationId: updateLocation
      summary: Update an existing location
      description: Update location details using its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
      responses:
        200:
          description: Location updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
        404:
          description: Location not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: deleteLocation
      summary: Delete a location by ID
      description: Remove a location from the database using its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Location deleted successfully
        404:
          description: Location not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Location:
      type: object
      properties:
        id:
          type: string
        zipCode:
          type: integer
        country:
          type: string
        city:
          type: string
        state:
          type: string
        addressLineOne:
          type: string
        addressLineTwo:
          type: string
        client:
          type: object
          properties:
            clientId:
              type: string
            clientName:
              type: string
        commonFields:
          type: object
          properties:
            createdBy:
              type: string
            createdDate:
              type: string
              format: date-time
            updatedBy:
              type: string
            updatedDate:
              type: string
              format: date-time

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
